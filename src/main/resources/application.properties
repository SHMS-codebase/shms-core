spring.application.name=SmartHealthCareMngnt

debug=true

# Logging Configuration
logging.level.org.springframework=DEBUG
logging.level.com.healthcaremngnt=DEBUG
logging.level.org.springframework.transaction=DEBUG
logging.level.org.springframework.orm.jpa=DEBUG

# Server configuration 
# server.port=8080 

# Thymeleaf configuration 
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false

spring.web.resources.static-locations=classpath:/static/

# Spring Security Configuration (optional for custom settings) 
spring.security.user.name=zoey 
spring.security.user.password=281018 
spring.security.user.roles=USER

#spring.mvc.view.prefix=/views/
#spring.mvc.view.suffix=.jsp

# Docker DB Connection 
# spring.datasource.url=jdbc:mysql://host.docker.internal:3306/healthcare_mngnt

# Basic DB Connection
spring.datasource.url=jdbc:mysql://localhost:3306/healthcare_mngnt
spring.datasource.username=root
spring.datasource.password=Zoey@28
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# HikariCP Settings
spring.datasource.hikari.pool-name=SHMSPool
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
# 10 minutes
spring.datasource.hikari.idle-timeout=600000  
# 30 seconds    
spring.datasource.hikari.connection-timeout=30000   
# 30 minutes
spring.datasource.hikari.max-lifetime=1800000       
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.connection-test-query=SELECT 1

# Spring Data JPA 
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update 
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE

# Enable Hibernate Statistics
spring.jpa.properties.hibernate.generate_statistics=true

# Spring Batch Configuration
spring.batch.jdbc.initialize-schema=ALWAYS

# Enable endpoints in Actuator
management.endpoints.web.exposure.include=health,info,metrics,prometheus

# Custom Error Page
server.error.whitelabel.enabled=false

# Mail Service Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=smarthealthcaremngntsystem@gmail.com
spring.mail.password=qtil rdbx nswf rwlb
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# log4j
logging.config=classpath:log4j2-spring.xml

# Enable HTTPS 
server.port=8443
server.ssl.enabled=true
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=SHMS@28
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=tomcat

# Internationalization (i18n)
spring.messages.basename=messages
spring.messages.encoding=UTF-8

# Hibernate Slow Query Logging
spring.jpa.properties.hibernate.session.events.log.LOG_QUERIES_SLOWER_THAN_MS=50
logging.level.org.hibernate.SQL_SLOW=INFO

# OAuth2 Configuration for Google
# Removed client-id and client-secret for security reasons and GitHub best practices 
# Add then while deploying or testing locally
spring.security.oauth2.client.registration.google.scope=openid,email,profile,https://www.googleapis.com/auth/calendar
spring.security.oauth2.client.registration.google.redirect-uri: "{baseUrl}/login/oauth2/code/google"

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo